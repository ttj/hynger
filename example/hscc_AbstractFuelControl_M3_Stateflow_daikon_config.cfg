# You can pretend this file is -*- perl -*-

# Each configuration option corresponds to a variable in the Daikon source
# code.  Those variables have names identical to the configuration options,
# except that the variable names start with "dkconfig_" (for example,
# daikon.FileIO.dkconfig_add_changed).  That prefix makes them easy to find
# and reminds the reader that those variables should be set only via the
# configuration mechanism, never via direct assignment in Java code.

# All possible configuration options are described in the Daikon
# manual.  Command line switches to Daikon may specify a file (such as
# this one) that lists settings to read, or may specify single options
# directly.

# Here is an example of how one might change some settings.

# For invariants ...

#daikon.inv.Invariant.probability_limit = .01
daikon.inv.unary.scalar.Modulus.enabled = 1
#daikon.inv.binary.sequenceString.Member.enabled = 0

# For derived variables ...

daikon.derive.unary.SequenceInitial.enabled = 1
daikon.derive.unary.SequenceSum.enabled = 1

# For splitters ...

daikon.split.SplitterList.all_splitters = true
#daikon.split.FileCompiler.compiler = javac










daikon.PrintInvariants.print_all=true
daikon.derive.binary.SequenceFloatIntersection.enabled=true 
daikon.derive.binary.SequenceFloatSubscript.enabled=true 
daikon.derive.binary.SequenceFloatSubsequence.enabled=true 
daikon.derive.binary.SequenceFloatUnion.enabled=true 
daikon.PptTopLevel.pairwise_implications=true 
daikon.derive.binary.SequenceScalarIntersection.enabled=true 
daikon.derive.binary.SequencesConcat.enabled=true 
daikon.derive.binary.SequencesJoin.enabled=true 
daikon.derive.binary.SequencesJoinFloat.enabled=true 
daikon.derive.binary.SequencesPredicate.enabled=true 
daikon.derive.binary.SequencesPredicateFloat.enabled=true 
daikon.derive.ternary.SequenceFloatArbitrarySubsequence.enabled=true 
daikon.derive.ternary.SequenceScalarArbitrarySubsequence.enabled=true 
daikon.derive.ternary.SequenceStringArbitrarySubsequence.enabled=true 
daikon.derive.unary.SequenceInitial.enabled=true 
daikon.derive.unary.SequenceInitialFloat.enabled=true 
daikon.derive.unary.SequenceMax.enabled=true 
daikon.derive.unary.SequenceMin.enabled=true 
daikon.derive.unary.SequenceSum.enabled=true 
daikon.inv.unary.sequence.CommonFloatSequence.enabled=true 
daikon.derive.binary.SequencesPredicateFloat.enabled=true 
daikon.derive.ternary.SequenceFloatArbitrarySubsequence.enabled=true 
daikon.derive.ternary.SequenceScalarArbitrarySubsequence.enabled=true 
daikon.derive.unary.SequenceInitialFloat.enabled=true 
daikon.derive.unary.SequenceMax.enabled=true 
daikon.derive.unary.SequenceMin.enabled=true











daikon.derive.unary.SequenceSum.enabled=true
daikon.derive.binary.SequenceFloatIntersection.enabled=true
daikon.derive.binary.SequenceFloatSubscript.enabled=true
daikon.derive.binary.SequenceFloatSubsequence.enabled=true
daikon.derive.binary.SequenceFloatUnion.enabled=true
daikon.PptTopLevel.pairwise_implications=true
daikon.derive.binary.SequenceScalarIntersection.enabled=true
daikon.derive.binary.SequencesConcat.enabled=true
daikon.derive.binary.SequencesJoin.enabled=true
daikon.derive.binary.SequencesJoinFloat.enabled=true
daikon.derive.binary.SequencesPredicate.enabled=true
daikon.derive.binary.SequencesPredicateFloat.enabled=true
daikon.derive.ternary.SequenceFloatArbitrarySubsequence.enabled=true
daikon.derive.ternary.SequenceScalarArbitrarySubsequence.enabled=true
daikon.derive.ternary.SequenceStringArbitrarySubsequence.enabled=true
daikon.derive.unary.SequenceInitial.enabled=true
daikon.derive.unary.SequenceInitialFloat.enabled=true
daikon.derive.unary.SequenceMax.enabled=true
daikon.derive.unary.SequenceMin.enabled=true
daikon.inv.unary.sequence.CommonFloatSequence.enabled=true
daikon.derive.binary.SequencesPredicateFloat.enabled=true
daikon.derive.ternary.SequenceFloatArbitrarySubsequence.enabled=true
daikon.derive.ternary.SequenceScalarArbitrarySubsequence.enabled=true
daikon.derive.unary.SequenceInitialFloat.enabled=true
daikon.derive.unary.SequenceMax.enabled=true
daikon.derive.unary.SequenceMin.enabled=true

# default: 1.0e-4
# between 0 and 0.1
daikon.inv.Invariant.fuzzy_ratio=0.01

#
daikon.inv.binary.twoSequence.SubSequence.enabled=true
daikon.inv.binary.twoSequence.SubSequenceFloat.enabled=true
daikon.inv.binary.twoSequence.SubSetFloat.enabled=true

daikon.inv.ternary.threeScalar.FunctionBinary.enabled=true
daikon.inv.ternary.threeScalar.LinearTernary.enabled=true
daikon.inv.unary.sequence.CommonFloatSequence.enabled=true

daikon.derive.binary.SequenceFloatIntersection.enabled=true
daikon.derive.binary.SequenceFloatSubsequence.enabled=true
daikon.derive.binary.SequencesJoinFloat.enabled=true
daikon.derive.binary.SequencesPredicate.enabled=true


daikon.inv.ternary.threeScalar.FunctionBinaryFloat.enabled=true
daikon.inv.ternary.threeScalar.LinearTernaryFloat.enabled=true

daikon.inv.unary.scalar.LowerBoundFloat.enabled=true

daikon.inv.unary.sequence.EltLowerBoundFloat.enabled=true

daikon.inv.binary.twoScalar.FloatEqual.enabled=true

daikon.inv.binary.twoScalar.FloatGreaterEqual.enabled=true
daikon.inv.binary.twoScalar.FloatGreaterThan.enabled=true
daikon.inv.binary.twoScalar.FloatNonEqual.enabled=true

#FunctionBinaryFloat.MultiplyDouble

daikon.inv.binary.twoScalar.LinearBinaryFloat.enabled=true
daikon.inv.binary.twoScalar.NumericFloat.Square.enabled=true
