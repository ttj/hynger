% This tutorial shows how to set up an interface between Breach and a
% Simulink model with inputs.
%

% Initialize Breach
InitBreach;

%% Define the Breach structure from the Simulink model

% name of the Simulink model 
mdl = 'Autotrans_shift'; % note that breach will use its own copy of this model

% signals to monitor using Breach
signals = 'logged'; % breach will look for logged signals in the model, 
                    % in addition to inputs and outputs

                    
params = {}; % we don't declare parameters for this system
p0 = [];     % hence no nominal values. 

%% Create system structure with piecewise constant input with fixed time step
% Note that inputs are piecewise constant because 'interpolate data' is
% unchecked in the input blocks properties of the original Simulink model

inputs = 'UniStep4';  % fixed time step inputs (duration = simulation time/4)
Sys = CreateSimulinkSystem(mdl, signals, params, p0, inputs);

Sys.tspan = 0:.01:50; % default time for the simulation

% the following will list inputs parameters generated by breach
inputs = FindParamsInput(Sys)'
idx_inputs = FindParam(Sys, inputs);         

% Set nominal input values (0 by default otherwise)

Sys.p( idx_inputs ) = ...
      [ 50 ...       %   throttle_u0     
        100 ...      %   throttle_u1            
        0  ...       %   throttle_u2 
        0  ...       %   throttle_u3 
        0   ...      %   brake_u0  
        0 ...        %   brake_u1    
        150   ...    %   brake_u2    
        325 ...      %   brake_u3    
      ];

%% Create nominal parameter set and compute trajectory  
P0 = CreateParamSet(Sys);

% runs simulation - this will create a field P0.traj 
P0 = ComputeTraj(Sys, P0, Sys.tspan);

% plots signals
figure;
SplotVar(P0);
pause

%% Create system structure with piecewise constant inputs, variable time steps
% Note that inputs are piecewise constant because 'interpolate data' is
% unchecked in the input blocks properties of the original Simulink model

inputs = 'VarStep4';  % input strategy - variable time step
Sys = CreateSimulinkSystem(mdl, signals, params, p0, inputs);

Sys.tspan = 0:.01:50; % default time for the simulation

%% Inputs parameters generated by breach
inputs = FindParamsInput(Sys)'
idx_inputs = FindParam(Sys, inputs);         

%% Set nominal input values (0 by default otherwise)

Sys.p( idx_inputs ) = ...
      [ 15    ...     % dt_u0        - duration of first input               
        50    ...     % throttle_u0  - value of first input (throttle) 
        0     ...     % brake_u0     - value of second input (brake)           
        10    ...     % dt_u1   
        0     ...     % throttle_u1
        325   ...     % brake_u1  
        15    ...     % dt_u2   
        100   ...     % throttle_u2
        0     ...     % brake_u2  
        10    ...     % dt_u3   
        0     ...     % throttle_u3
        325   ...     % brake_u3  
      ];

% with these values, the car will accelerate at 50% for 15s then brake at 325 for 10s, then accelerate for 100s, etc

%% Create nominal parameter set and compute trajectory  
P0 = CreateParamSet(Sys);

% runs simulation
P0 = ComputeTraj(Sys, P0, Sys.tspan);
  
% plots signals
figure;
SplotVar(P0);

